"""Add multi-label support"""

# revision identifiers, used by Alembic.
revision = '0fd16cdac8ca'
down_revision = 'a1343ebd31c7'

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy.dialects import postgresql


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('problem_label',
        sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('problem_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
        sa.Column('label', sa.Unicode(length=255), nullable=False),
        sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dataset_label_probability',
        sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('data_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
        sa.Column('label_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
        sa.Column('probability', sa.Float(), nullable=True),
        sa.CheckConstraint('probability >= 0 AND probability <= 1', name='chk_dataset_probability'),
        sa.ForeignKeyConstraint(['data_id'], ['dataset.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['label_id'], ['problem_label.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.add_column('label_event', sa.Column('label_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=True))
    op.add_column('problem', sa.Column('name', sa.Unicode(length=255), nullable=True))

    op.execute('''
        INSERT INTO problem_label(problem_id, label)
        SELECT id, label FROM problem
    ''')
    op.execute('''
        INSERT INTO dataset_label_probability(data_id, label_id, probability)
        SELECT id, (SELECT id FROM problem_label WHERE problem_id = dataset.problem_id), probability FROM dataset
    ''')
    op.execute('''
        UPDATE label_event SET
        label_id = (SELECT id FROM problem_label WHERE label = label_event.label)
    ''')
    op.execute('''
        UPDATE problem SET
        name = (SELECT label FROM problem_label WHERE problem_id = problem.id)
    ''')

    op.alter_column('label_event', 'label_id', nullable=False)
    op.alter_column('problem', 'name', nullable=False)

    op.create_index(op.f('ix_dataset_label_probability_data_id'), 'dataset_label_probability', ['data_id'], unique=False)
    op.create_index(op.f('ix_dataset_label_probability_label_id'), 'dataset_label_probability', ['label_id'], unique=False)
    op.drop_column('dataset', 'probability')
    op.drop_column('problem', 'label')


    op.create_index(op.f('ix_label_event_label_id'), 'label_event', ['label_id'], unique=False)
    op.create_foreign_key(None, 'label_event', 'problem_label', ['label_id'], ['id'], ondelete='CASCADE')
    op.drop_column('label_event', 'label')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('label_event', sa.Column('label', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('dataset', sa.Column('probability', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('problem', sa.Column('label', sa.Unicode(length=255), nullable=True))

    op.execute('''
        UPDATE label_event SET label = (SELECT label FROM problem_label WHERE problem_label.id = label_event.label_id)
    ''')
    op.execute('''
        UPDATE dataset SET probability = (SELECT probability FROM dataset_label_probability WHERE dataset_label_probability.data_id = dataset.id)
    ''')
    op.execute('''
        UPDATE problem SET label = (SELECT label FROM problem_label WHERE problem_label.problem_id = problem.id)
    ''')

    op.alter_column('label_event', 'label', nullable=False)
    op.alter_column('problem', 'label', nullable=False)

    op.drop_column('problem', 'name')
    op.drop_index(op.f('ix_label_event_label_id'), table_name='label_event')
    op.drop_column('label_event', 'label_id')
    op.drop_index(op.f('ix_dataset_label_probability_label_id'), table_name='dataset_label_probability')
    op.drop_index(op.f('ix_dataset_label_probability_data_id'), table_name='dataset_label_probability')
    op.drop_table('dataset_label_probability')
    op.drop_table('problem_label')
    # ### end Alembic commands ###
